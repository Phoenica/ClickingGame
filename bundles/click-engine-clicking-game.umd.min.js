!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports,require("@angular/core")):"function"==typeof define&&define.amd?define("@click-engine/clicking-game",["exports","@angular/core"],i):i((t["click-engine"]=t["click-engine"]||{},t["click-engine"]["clicking-game"]={}),t.ng.core)}(this,function(t,i){"use strict";var n={canvasWidth:300,canvasHeight:300,groundFriction:.005,gravityStrength:.1},e=function(){function t(t,i,n,e,a,o){void 0===e&&(e=0),void 0===a&&(a=0),void 0===o&&(o=.8),this.x=t,this.y=i,this.radius=n,this.dx=e,this.dy=a,this.bounciness=o}return t.prototype.draw=function(t){t.beginPath(),t.arc(this.x,this.y,this.radius,0,2*Math.PI),t.fill(),t.stroke()},t}(),a=this&&this.__assign||Object.assign||function(t){for(var i,n=1,e=arguments.length;n<e;n++)for(var a in i=arguments[n])Object.prototype.hasOwnProperty.call(i,a)&&(t[a]=i[a]);return t},o=this&&this.__read||function(t,i){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var e,a,o=n.call(t),r=[];try{for(;(void 0===i||0<i--)&&!(e=o.next()).done;)r.push(e.value)}catch(s){a={error:s}}finally{try{e&&!e.done&&(n=o["return"])&&n.call(o)}finally{if(a)throw a.error}}return r},r=this&&this.__spread||function(){for(var t=[],i=0;i<arguments.length;i++)t=t.concat(o(arguments[i]));return t},s=function(){function t(){this.balls=[]}return t.prototype.ngAfterViewInit=function(){this.canvas&&(this.config=a({},n,this.gameBoardConfiguration),this.canvas.nativeElement.width=this.config.canvasWidth,this.canvas.nativeElement.height=this.config.canvasHeight,this.updateRender())},t.prototype.onClick=function(t){var i=new e(t.x,t.y,5,16*(Math.random()-.5),-8*Math.random(),(5.9*Math.random()+4)/10);this.balls=r(this.balls,[i])},t.prototype.calculateGravityEffect=function(t){var i=this;t.forEach(function(t){t.dy+=i.config.gravityStrength})},t.prototype.calculateMotion=function(t){t.forEach(function(t){t.x+=t.dx,t.y+=t.dy})},t.prototype.resolveWallCollisions=function(t){var i=this.config.canvasWidth,n=this.config.canvasHeight,e=this.config.groundFriction;t.forEach(function(t){t.x=t.x-t.radius<0?t.radius:t.x,t.x=t.x+t.radius>i?i-t.radius:t.x,t.y=t.y-t.radius<0?t.radius:t.y,t.y=t.y+t.radius>n?n-t.radius:t.y,t.dy=t.y===t.radius||t.y===n-t.radius?-t.bounciness*t.dy:t.dy,t.dx=t.x===t.radius||t.x===i-t.radius?-t.bounciness*t.dx:t.dx,t.dx=t.y===n-t.radius?t.dx*(1-e):t.dx})},t.prototype.updateRender=function(){var i=this.canvas.nativeElement.getContext("2d");i.clearRect(0,0,this.config.canvasWidth,this.config.canvasHeight),this.calculateGravityEffect(this.balls),this.calculateMotion(this.balls),this.resolveWallCollisions(this.balls),this.balls.forEach(function(t){return t.draw(i)}),requestAnimationFrame(this.updateRender.bind(this))},t.decorators=[{type:i.Component,args:[{selector:"ce-clicking-game",template:'<canvas #gameBoard (click)="onClick($event)"></canvas>\r\n',styles:["canvas{border:1px solid #000}"]}]}],t.propDecorators={gameBoardConfiguration:[{type:i.Input}],canvas:[{type:i.ViewChild,args:["gameBoard"]}]},t}(),c=function(){function t(){}return t.decorators=[{type:i.NgModule,args:[{declarations:[s],exports:[s]}]}],t}();t.ClickingGameModule=c,t.ClickingGameComponent=s,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=click-engine-clicking-game.umd.min.js.map